# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

########## SITE ###########

GET     /                           controllers.Application.site()
GET     /signup                     controllers.Application.site()
GET     /play                       controllers.Application.site()
# Next two routes will be created by facebook return, seems its not changable ...
GET     /#_=_                       controllers.Application.site()
GET     /_=_                        controllers.Application.site()

GET     /login                      controllers.Signin.login()
GET     /login/:provider		      controllers.Signin.url(provider: String)
POST    /login/:provider		      controllers.Signin.url(provider: String)
GET     /login/:provider/auth		   controllers.Signin.auth(provider: String)
POST    /login/:provider/auth	      controllers.Signin.auth(provider: String)
GET     /login/:provider/url        controllers.Signin.url(provider: String)
GET     /login/:provider/success    controllers.Signin.success(provider: String)
GET     /login/:provider/error      controllers.Signin.error(provider: String)
GET     /logout                     controllers.Signin.logout()


########## GAME ###########

GET     /game                       controllers.Game.index()

########## EDITOR ###########

GET     /editor                     controllers.Editor.index()

########## ADMIN ###########

GET     /admin                      controllers.Admin.index()
GET     /admin/login                controllers.Admin.login()

GET     /admin/user/all             controllers.Admin.userAll()
GET     /admin/user/:id             controllers.Admin.userShow(id: Long)

GET     /admin/map/all              controllers.Admin.mapAll()
GET     /admin/map/new              controllers.Admin.mapNew()
GET     /admin/map/:id              controllers.Admin.mapShow(id: Long)

GET     /admin/object/all           controllers.Admin.objectAll()
GET     /admin/object/new           controllers.Admin.objectNew()
GET     /admin/object/:id           controllers.Admin.objectShow(id: Long)

GET     /admin/news/all             controllers.Admin.newsAll()
GET     /admin/news/new             controllers.Admin.newsNew()
GET     /admin/news/:id             controllers.Admin.newsShow(id: Long)

# TODO: events missing

########## API ###########

GET     /api/me                     controllers.Me.show()
POST    /api/checkUsername/:name    controllers.Me.checkUsername(name: String)
POST    /api/checkEmail/:email      controllers.Me.checkEmail(email: String)

GET     /api/news/all               controllers.News.list()
GET     /api/news/:id               controllers.News.show(id: Long)
PUT     /api/news/:id               controllers.News.update(id: Long)
DELETE  /api/news/:id               controllers.News.delete(id: Long)
POST    /api/news                   controllers.News.add()

GET     /api/game/match/find        controllers.Matches.find()
GET     /api/game/match/create/:id  controllers.Matches.create(id: Long)
GET     /api/game/match/join/:id    controllers.Matches.join(id: Long)
GET     /api/game/match/start/:id   controllers.Matches.start(id: Long)
GET     /api/game/match/join        controllers.Matches.joinMatch()
GET     /api/game/match/quit        controllers.Matches.quit()
GET     /api/game/match/history     controllers.Matches.history()
GET     /api/game/match/:id         controllers.Matches.show(id: Long)

GET     /api/game/map/all           controllers.Maps.list()
GET     /api/game/map/:id           controllers.Maps.show(id: Long)
PUT     /api/game/map/:id           controllers.Maps.update(id: Long)
DELETE  /api/game/map/:id           controllers.Maps.delete(id: Long)
POST    /api/game/map               controllers.Maps.add()

GET     /api/user/all               controllers.Users.list()
GET     /api/user/:id               controllers.Users.show(id: Long)
PUT     /api/user/:id               controllers.Users.update(id: Long)
DELETE  /api/user/:id               controllers.Users.delete(id: Long)
POST    /api/user                   controllers.Users.add()

GET     /api/editor/map/default     controllers.Editor.mapDefault()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
